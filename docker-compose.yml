name: iot-ws24

# docker volume create ws24_influxdb
# docker volume create ws24_grafana

# create your volumes here
volumes:
  influxdb-data:
    name: "ws24_influxdb"
    external: true
  grafana_storage:
    name: "ws24_grafana"
    external: true
  influxdb-config:


# SERVICES
services:
  # Automatic container updates
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --stop-timeout 60s --schedule "0 0 4 * * *" --cleanup=true
    profiles: [tig]

  # Telegraf
  telegraf:
    image: docker.io/telegraf:alpine
    restart: unless-stopped
    environment:
      INFLUX_URL: influxdb:8086
      USER: /run/secrets/influxdb-admin-username
      INFLUX_PASSWORD: /run/secrets/influxdb-admin-password
      INFLUX_SKIP_DATABASE_CREATION: false
      #FHYDRATE_PASSWORD: /run/secrets/fhydrate_password
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
      #- fhydrate_password
    configs:
      - source: telegraf.conf
        target: /etc/telegraf/telegraf.conf
    depends_on:
      - influxdb
    labels:
      - com.centurylinklabs.watchtower.monitor-only="true"
    profiles: [tig]

  # InfluxDB
  influxdb:
    image: influxdb:2
    restart: unless-stopped
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb-admin-password 
      DOCKER_INFLUXDB_INIT_ORG: iot 
      DOCKER_INFLUXDB_INIT_BUCKET: measurements
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
    volumes:
      - type: volume
        source: influxdb-data
        target: /var/lib/influxdb
      - type: volume
        source: influxdb-config
        target: /etc/influxdb
    profiles: [tig]

  # Grafana
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports: 
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/influxdb-admin-username
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana-admin-password
    secrets:
      - influxdb-admin-username
      - grafana-admin-password
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    profiles: [tig]

  # MQTT
  mqtt:
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
    configs:
      - source: mosquitto.conf
        target: /mosquitto/config/mosquitto.conf
  
  # CoAP
  coap:
    restart: unless-stopped
    build:
      context: ./coap-server
      dockerfile: Dockerfile
    environment: 
      - MQTT_SERVER=mqtt
    ports:
      - "5683:5683"
      - "5683:5683/udp"
    depends_on:
      - mqtt


# All secrets
secrets:
  influxdb-admin-username:
    file: ~/secrets/influxdb-admin-username
  influxdb-admin-password:
    file: ~/secrets/influxdb-admin-password
  grafana-admin-password:
    file: ~/secrets/grafana-admin-password


# Config Files
configs:
  telegraf.conf:
    content: |
      [agent]
        interval = "10m"
        round_interval = true
        debug = true
        quiet = false

      [[inputs.mqtt_consumer]]
        servers = ["tcp://mqtt:1883"]
        topics = [
          "foo/#"
        ]
        data_format = "value"
        topic_tag = "topic"

      [[outputs.file]]
        files = ["stdout"]
        data_format = "json"
        json_timestamp_units = "1s"

  mosquitto.conf:
    content: |
      listener 1883
      allow_anonymous true
